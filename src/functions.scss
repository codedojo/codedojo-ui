@use 'sass:color';
@use 'sass:map';
@use 'sass:math';
@use 'sass:meta';

@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
  
    @return $number;
}

@function rem($px) {
    @return strip-unit(math.div($px, 16px)) * 1rem;
}

@function rgb($color) {
    @return color.red($color), color.green($color), color.blue($color);
}

@function _linear-channel-value($channel-value) {
    $normalized-channel-value: math.div($channel-value, 255);

    @if $normalized-channel-value < 0.03928 {
        @return math.div($normalized-channel-value, 12.92);
    }

    @return math.pow(math.div($normalized-channel-value + 0.055, 1.055), 2.4);
}
  
// Calculate the luminance for a color.
// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
@function luminance($color) {
    $red: _linear-channel-value(color.red($color));
    $green: _linear-channel-value(color.green($color));
    $blue: _linear-channel-value(color.blue($color));
  
    @return 0.2126 * $red + 0.7152 * $green + 0.0722 * $blue;
}

@function contrast($back, $front) {
    $backLum: luminance($back) + 0.05;
    $foreLum: luminance($front) + 0.05;
  
    @return math.div(math.max($backLum, $foreLum), math.min($backLum, $foreLum));
}

@function tone($color) {
    @if $color == 'dark' or $color == 'light' {
        @return $color;
    }
  
    @if meta.type-of($color) != 'color' {
        @warn '#{$color} is not a color. Falling back to "dark" tone.';
        @return 'dark';
    }
  
    $minimumContrast: 3.1;
  
    $lightContrast: contrast($color, white);
    $darkContrast: contrast($color, rgba(black, 0.87));
  
    @if ($lightContrast < $minimumContrast) and ($darkContrast > $lightContrast) {
        @return 'light';
    } @else {
        @return 'dark';
    }
}

@function contrast-tone($color) {
    @return if(tone($color) == 'dark', 'light', 'dark');
}

@function on-color($color, $dark-color, $light-color) {
    @return if(contrast-tone($color) == 'dark', $dark-color, $light-color);
}